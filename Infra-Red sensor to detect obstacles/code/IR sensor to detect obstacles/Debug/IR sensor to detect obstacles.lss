
IR sensor to detect obstacles.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000051e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  0000051e  00000592  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000005b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000109e  00000000  00000000  000006f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000806  00000000  00000000  00001796  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008cd  00000000  00000000  00001f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000168  00000000  00000000  0000286c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c2  00000000  00000000  000029d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009bb  00000000  00000000  00002e96  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00003851  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e1       	ldi	r30, 0x1E	; 30
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 38       	cpi	r26, 0x80	; 128
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 89 01 	call	0x312	; 0x312 <main>
  7a:	0c 94 8d 02 	jmp	0x51a	; 0x51a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_vsetPINDir>:
		break ;
		case 'C' :
		DDRC=direction; //set the direction of port C
		break ;
		case 'D':
		DDRD=direction; //set the direction of port D
  82:	82 34       	cpi	r24, 0x42	; 66
  84:	19 f1       	breq	.+70     	; 0xcc <DIO_vsetPINDir+0x4a>
  86:	18 f4       	brcc	.+6      	; 0x8e <DIO_vsetPINDir+0xc>
  88:	81 34       	cpi	r24, 0x41	; 65
  8a:	39 f0       	breq	.+14     	; 0x9a <DIO_vsetPINDir+0x18>
  8c:	08 95       	ret
  8e:	83 34       	cpi	r24, 0x43	; 67
  90:	b1 f1       	breq	.+108    	; 0xfe <DIO_vsetPINDir+0x7c>
  92:	84 34       	cpi	r24, 0x44	; 68
  94:	09 f4       	brne	.+2      	; 0x98 <DIO_vsetPINDir+0x16>
  96:	4c c0       	rjmp	.+152    	; 0x130 <DIO_vsetPINDir+0xae>
  98:	08 95       	ret
  9a:	41 30       	cpi	r20, 0x01	; 1
  9c:	59 f4       	brne	.+22     	; 0xb4 <DIO_vsetPINDir+0x32>
  9e:	2a b3       	in	r18, 0x1a	; 26
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_vsetPINDir+0x28>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_vsetPINDir+0x24>
  ae:	82 2b       	or	r24, r18
  b0:	8a bb       	out	0x1a, r24	; 26
  b2:	08 95       	ret
  b4:	2a b3       	in	r18, 0x1a	; 26
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_vsetPINDir+0x3e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_vsetPINDir+0x3a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	8a bb       	out	0x1a, r24	; 26
  ca:	08 95       	ret
  cc:	41 30       	cpi	r20, 0x01	; 1
  ce:	59 f4       	brne	.+22     	; 0xe6 <DIO_vsetPINDir+0x64>
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_vsetPINDir+0x5a>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_vsetPINDir+0x56>
  e0:	82 2b       	or	r24, r18
  e2:	87 bb       	out	0x17, r24	; 23
  e4:	08 95       	ret
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_vsetPINDir+0x70>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_vsetPINDir+0x6c>
  f6:	80 95       	com	r24
  f8:	82 23       	and	r24, r18
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	59 f4       	brne	.+22     	; 0x118 <DIO_vsetPINDir+0x96>
 102:	24 b3       	in	r18, 0x14	; 20
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_vsetPINDir+0x8c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_vsetPINDir+0x88>
 112:	82 2b       	or	r24, r18
 114:	84 bb       	out	0x14, r24	; 20
 116:	08 95       	ret
 118:	24 b3       	in	r18, 0x14	; 20
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_vsetPINDir+0xa2>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_vsetPINDir+0x9e>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	59 f4       	brne	.+22     	; 0x14a <DIO_vsetPINDir+0xc8>
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_vsetPINDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_vsetPINDir+0xba>
 144:	82 2b       	or	r24, r18
 146:	81 bb       	out	0x11, r24	; 17
 148:	08 95       	ret
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_vsetPINDir+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_vsetPINDir+0xd0>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <DIO_write>:
 162:	82 34       	cpi	r24, 0x42	; 66
 164:	19 f1       	breq	.+70     	; 0x1ac <DIO_write+0x4a>
 166:	18 f4       	brcc	.+6      	; 0x16e <DIO_write+0xc>
 168:	81 34       	cpi	r24, 0x41	; 65
 16a:	39 f0       	breq	.+14     	; 0x17a <DIO_write+0x18>
 16c:	08 95       	ret
 16e:	83 34       	cpi	r24, 0x43	; 67
 170:	b1 f1       	breq	.+108    	; 0x1de <DIO_write+0x7c>
 172:	84 34       	cpi	r24, 0x44	; 68
 174:	09 f4       	brne	.+2      	; 0x178 <DIO_write+0x16>
 176:	4c c0       	rjmp	.+152    	; 0x210 <DIO_write+0xae>
 178:	08 95       	ret
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	59 f4       	brne	.+22     	; 0x194 <DIO_write+0x32>
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_write+0x28>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_write+0x24>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	2b b3       	in	r18, 0x1b	; 27
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_write+0x3e>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_write+0x3a>
 1a4:	80 95       	com	r24
 1a6:	82 23       	and	r24, r18
 1a8:	8b bb       	out	0x1b, r24	; 27
 1aa:	08 95       	ret
 1ac:	41 30       	cpi	r20, 0x01	; 1
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <DIO_write+0x64>
 1b0:	28 b3       	in	r18, 0x18	; 24
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_write+0x5a>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_write+0x56>
 1c0:	82 2b       	or	r24, r18
 1c2:	88 bb       	out	0x18, r24	; 24
 1c4:	08 95       	ret
 1c6:	28 b3       	in	r18, 0x18	; 24
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_write+0x70>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_write+0x6c>
 1d6:	80 95       	com	r24
 1d8:	82 23       	and	r24, r18
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
 1de:	41 30       	cpi	r20, 0x01	; 1
 1e0:	59 f4       	brne	.+22     	; 0x1f8 <DIO_write+0x96>
 1e2:	25 b3       	in	r18, 0x15	; 21
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_write+0x8c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_write+0x88>
 1f2:	82 2b       	or	r24, r18
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	08 95       	ret
 1f8:	25 b3       	in	r18, 0x15	; 21
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_write+0xa2>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_write+0x9e>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	85 bb       	out	0x15, r24	; 21
 20e:	08 95       	ret
 210:	41 30       	cpi	r20, 0x01	; 1
 212:	59 f4       	brne	.+22     	; 0x22a <DIO_write+0xc8>
 214:	22 b3       	in	r18, 0x12	; 18
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_write+0xbe>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_write+0xba>
 224:	82 2b       	or	r24, r18
 226:	82 bb       	out	0x12, r24	; 18
 228:	08 95       	ret
 22a:	22 b3       	in	r18, 0x12	; 18
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_write+0xd4>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_write+0xd0>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret

00000242 <DIO_u8read>:
 242:	82 34       	cpi	r24, 0x42	; 66
 244:	d9 f0       	breq	.+54     	; 0x27c <DIO_u8read+0x3a>
 246:	18 f4       	brcc	.+6      	; 0x24e <DIO_u8read+0xc>
 248:	81 34       	cpi	r24, 0x41	; 65
 24a:	31 f0       	breq	.+12     	; 0x258 <DIO_u8read+0x16>
 24c:	4d c0       	rjmp	.+154    	; 0x2e8 <DIO_u8read+0xa6>
 24e:	83 34       	cpi	r24, 0x43	; 67
 250:	39 f1       	breq	.+78     	; 0x2a0 <DIO_u8read+0x5e>
 252:	84 34       	cpi	r24, 0x44	; 68
 254:	b9 f1       	breq	.+110    	; 0x2c4 <DIO_u8read+0x82>
 256:	48 c0       	rjmp	.+144    	; 0x2e8 <DIO_u8read+0xa6>
 258:	29 b3       	in	r18, 0x19	; 25
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	06 2e       	mov	r0, r22
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_u8read+0x24>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	0a 94       	dec	r0
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_u8read+0x20>
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	82 23       	and	r24, r18
 26e:	93 23       	and	r25, r19
 270:	02 c0       	rjmp	.+4      	; 0x276 <DIO_u8read+0x34>
 272:	95 95       	asr	r25
 274:	87 95       	ror	r24
 276:	6a 95       	dec	r22
 278:	e2 f7       	brpl	.-8      	; 0x272 <DIO_u8read+0x30>
 27a:	08 95       	ret
 27c:	26 b3       	in	r18, 0x16	; 22
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	06 2e       	mov	r0, r22
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_u8read+0x48>
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	0a 94       	dec	r0
 28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_u8read+0x44>
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	82 23       	and	r24, r18
 292:	93 23       	and	r25, r19
 294:	02 c0       	rjmp	.+4      	; 0x29a <DIO_u8read+0x58>
 296:	95 95       	asr	r25
 298:	87 95       	ror	r24
 29a:	6a 95       	dec	r22
 29c:	e2 f7       	brpl	.-8      	; 0x296 <DIO_u8read+0x54>
 29e:	08 95       	ret
 2a0:	23 b3       	in	r18, 0x13	; 19
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	06 2e       	mov	r0, r22
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <DIO_u8read+0x6c>
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	0a 94       	dec	r0
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <DIO_u8read+0x68>
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	82 23       	and	r24, r18
 2b6:	93 23       	and	r25, r19
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_u8read+0x7c>
 2ba:	95 95       	asr	r25
 2bc:	87 95       	ror	r24
 2be:	6a 95       	dec	r22
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_u8read+0x78>
 2c2:	08 95       	ret
 2c4:	20 b3       	in	r18, 0x10	; 16
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	06 2e       	mov	r0, r22
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <DIO_u8read+0x90>
 2ce:	88 0f       	add	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	0a 94       	dec	r0
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <DIO_u8read+0x8c>
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	82 23       	and	r24, r18
 2da:	93 23       	and	r25, r19
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <DIO_u8read+0xa0>
 2de:	95 95       	asr	r25
 2e0:	87 95       	ror	r24
 2e2:	6a 95       	dec	r22
 2e4:	e2 f7       	brpl	.-8      	; 0x2de <DIO_u8read+0x9c>
 2e6:	08 95       	ret
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	08 95       	ret

000002ec <DIO_write_port>:
	}
	
}
void DIO_write_port(unsigned char portname,unsigned char portvalue)
{
	switch(portname)
 2ec:	82 34       	cpi	r24, 0x42	; 66
 2ee:	59 f0       	breq	.+22     	; 0x306 <DIO_write_port+0x1a>
 2f0:	18 f4       	brcc	.+6      	; 0x2f8 <DIO_write_port+0xc>
 2f2:	81 34       	cpi	r24, 0x41	; 65
 2f4:	31 f0       	breq	.+12     	; 0x302 <DIO_write_port+0x16>
 2f6:	08 95       	ret
 2f8:	83 34       	cpi	r24, 0x43	; 67
 2fa:	39 f0       	breq	.+14     	; 0x30a <DIO_write_port+0x1e>
 2fc:	84 34       	cpi	r24, 0x44	; 68
 2fe:	39 f0       	breq	.+14     	; 0x30e <DIO_write_port+0x22>
 300:	08 95       	ret
	{
		case 'A' :
		PORTA=portvalue; //Write the given value to the port A
 302:	6b bb       	out	0x1b, r22	; 27
		break ;
 304:	08 95       	ret
		case 'B':
		PORTB=portvalue; //Write the given value to the port B
 306:	68 bb       	out	0x18, r22	; 24
		break ;
 308:	08 95       	ret
		case 'C' :
		PORTC=portvalue; //Write the given value to the port C
 30a:	65 bb       	out	0x15, r22	; 21
		break ;
 30c:	08 95       	ret
		case 'D':
		PORTD=portvalue; //Write the given value to the port D
 30e:	62 bb       	out	0x12, r22	; 18
 310:	08 95       	ret

00000312 <main>:
#include "LCD.h"
#define F_CPU 8000000UL
#include <util/delay.h>
int main(void)
{
	LCD_vInit();
 312:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <LCD_vInit>
    while(1)
    {
		if(DIO_u8read('D',0)==1)
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	84 e4       	ldi	r24, 0x44	; 68
 31a:	0e 94 21 01 	call	0x242	; 0x242 <DIO_u8read>
 31e:	81 30       	cpi	r24, 0x01	; 1
 320:	79 f4       	brne	.+30     	; 0x340 <main+0x2e>
		{
			LCD_clearscreen();
 322:	0e 94 64 02 	call	0x4c8	; 0x4c8 <LCD_clearscreen>
			LCD_vSend_string("there is");
 326:	80 e6       	ldi	r24, 0x60	; 96
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0e 94 55 02 	call	0x4aa	; 0x4aa <LCD_vSend_string>
			LCD_movecursor(2,1);
 32e:	61 e0       	ldi	r22, 0x01	; 1
 330:	82 e0       	ldi	r24, 0x02	; 2
 332:	0e 94 6e 02 	call	0x4dc	; 0x4dc <LCD_movecursor>
			LCD_vSend_string("obstacle");
 336:	89 e6       	ldi	r24, 0x69	; 105
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	0e 94 55 02 	call	0x4aa	; 0x4aa <LCD_vSend_string>
 33e:	06 c0       	rjmp	.+12     	; 0x34c <main+0x3a>
		}
		else
		{
			LCD_clearscreen();
 340:	0e 94 64 02 	call	0x4c8	; 0x4c8 <LCD_clearscreen>
			LCD_vSend_string("No obstacles");
 344:	82 e7       	ldi	r24, 0x72	; 114
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	0e 94 55 02 	call	0x4aa	; 0x4aa <LCD_vSend_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34c:	2f ef       	ldi	r18, 0xFF	; 255
 34e:	84 e3       	ldi	r24, 0x34	; 52
 350:	9c e0       	ldi	r25, 0x0C	; 12
 352:	21 50       	subi	r18, 0x01	; 1
 354:	80 40       	sbci	r24, 0x00	; 0
 356:	90 40       	sbci	r25, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <main+0x40>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <main+0x4a>
 35c:	00 00       	nop
 35e:	db cf       	rjmp	.-74     	; 0x316 <main+0x4>

00000360 <send_falling_edge>:
}


static void send_falling_edge(void)
{
	DIO_write('B',EN,1);
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	82 e4       	ldi	r24, 0x42	; 66
 366:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
 36a:	8f e9       	ldi	r24, 0x9F	; 159
 36c:	9f e0       	ldi	r25, 0x0F	; 15
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	f1 f7       	brne	.-4      	; 0x36e <send_falling_edge+0xe>
 372:	00 c0       	rjmp	.+0      	; 0x374 <send_falling_edge+0x14>
 374:	00 00       	nop
	_delay_ms(2);
	DIO_write('B',EN,0);
 376:	40 e0       	ldi	r20, 0x00	; 0
 378:	60 e0       	ldi	r22, 0x00	; 0
 37a:	82 e4       	ldi	r24, 0x42	; 66
 37c:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
 380:	8f e9       	ldi	r24, 0x9F	; 159
 382:	9f e0       	ldi	r25, 0x0F	; 15
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	f1 f7       	brne	.-4      	; 0x384 <send_falling_edge+0x24>
 388:	00 c0       	rjmp	.+0      	; 0x38a <send_falling_edge+0x2a>
 38a:	00 00       	nop
 38c:	08 95       	ret

0000038e <LCD_vSend_cmd>:
	_delay_ms(2);
}
void LCD_vSend_cmd(char cmd)
{
	#if defined eight_bits_mode
	DIO_write_port('A',cmd);
 38e:	68 2f       	mov	r22, r24
 390:	81 e4       	ldi	r24, 0x41	; 65
 392:	0e 94 76 01 	call	0x2ec	; 0x2ec <DIO_write_port>
	DIO_write('B',RS,0);
 396:	40 e0       	ldi	r20, 0x00	; 0
 398:	61 e0       	ldi	r22, 0x01	; 1
 39a:	82 e4       	ldi	r24, 0x42	; 66
 39c:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 3a0:	0e 94 b0 01 	call	0x360	; 0x360 <send_falling_edge>
 3a4:	8f ec       	ldi	r24, 0xCF	; 207
 3a6:	97 e0       	ldi	r25, 0x07	; 7
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <LCD_vSend_cmd+0x1a>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <LCD_vSend_cmd+0x20>
 3ae:	00 00       	nop
 3b0:	08 95       	ret

000003b2 <LCD_vInit>:
 3b2:	2f ef       	ldi	r18, 0xFF	; 255
 3b4:	81 ee       	ldi	r24, 0xE1	; 225
 3b6:	94 e0       	ldi	r25, 0x04	; 4
 3b8:	21 50       	subi	r18, 0x01	; 1
 3ba:	80 40       	sbci	r24, 0x00	; 0
 3bc:	90 40       	sbci	r25, 0x00	; 0
 3be:	e1 f7       	brne	.-8      	; 0x3b8 <LCD_vInit+0x6>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <LCD_vInit+0x10>
 3c2:	00 00       	nop

void LCD_vInit(void)
{
	_delay_ms(200);
	#if defined eight_bits_mode
	DIO_vsetPINDir('A',0,1);
 3c4:	41 e0       	ldi	r20, 0x01	; 1
 3c6:	60 e0       	ldi	r22, 0x00	; 0
 3c8:	81 e4       	ldi	r24, 0x41	; 65
 3ca:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',1,1);
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	61 e0       	ldi	r22, 0x01	; 1
 3d2:	81 e4       	ldi	r24, 0x41	; 65
 3d4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',2,1);
 3d8:	41 e0       	ldi	r20, 0x01	; 1
 3da:	62 e0       	ldi	r22, 0x02	; 2
 3dc:	81 e4       	ldi	r24, 0x41	; 65
 3de:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',3,1);
 3e2:	41 e0       	ldi	r20, 0x01	; 1
 3e4:	63 e0       	ldi	r22, 0x03	; 3
 3e6:	81 e4       	ldi	r24, 0x41	; 65
 3e8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',4,1);
 3ec:	41 e0       	ldi	r20, 0x01	; 1
 3ee:	64 e0       	ldi	r22, 0x04	; 4
 3f0:	81 e4       	ldi	r24, 0x41	; 65
 3f2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',5,1);
 3f6:	41 e0       	ldi	r20, 0x01	; 1
 3f8:	65 e0       	ldi	r22, 0x05	; 5
 3fa:	81 e4       	ldi	r24, 0x41	; 65
 3fc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',6,1);
 400:	41 e0       	ldi	r20, 0x01	; 1
 402:	66 e0       	ldi	r22, 0x06	; 6
 404:	81 e4       	ldi	r24, 0x41	; 65
 406:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('A',7,1);
 40a:	41 e0       	ldi	r20, 0x01	; 1
 40c:	67 e0       	ldi	r22, 0x07	; 7
 40e:	81 e4       	ldi	r24, 0x41	; 65
 410:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('B',EN,1);
 414:	41 e0       	ldi	r20, 0x01	; 1
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	82 e4       	ldi	r24, 0x42	; 66
 41a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('B',RW,1);
 41e:	41 e0       	ldi	r20, 0x01	; 1
 420:	62 e0       	ldi	r22, 0x02	; 2
 422:	82 e4       	ldi	r24, 0x42	; 66
 424:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_vsetPINDir('B',RS,1);
 428:	41 e0       	ldi	r20, 0x01	; 1
 42a:	61 e0       	ldi	r22, 0x01	; 1
 42c:	82 e4       	ldi	r24, 0x42	; 66
 42e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_vsetPINDir>
	DIO_write('B',RW,0);
 432:	40 e0       	ldi	r20, 0x00	; 0
 434:	62 e0       	ldi	r22, 0x02	; 2
 436:	82 e4       	ldi	r24, 0x42	; 66
 438:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	LCD_vSend_cmd(EIGHT_BITS); //8 bit mode
 43c:	88 e3       	ldi	r24, 0x38	; 56
 43e:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_cmd>
 442:	8f ec       	ldi	r24, 0xCF	; 207
 444:	97 e0       	ldi	r25, 0x07	; 7
 446:	01 97       	sbiw	r24, 0x01	; 1
 448:	f1 f7       	brne	.-4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 44c:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CURSOR_ON_DISPLAN_ON);//display on cursor on
 44e:	8e e0       	ldi	r24, 0x0E	; 14
 450:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_cmd>
 454:	8f ec       	ldi	r24, 0xCF	; 207
 456:	97 e0       	ldi	r25, 0x07	; 7
 458:	01 97       	sbiw	r24, 0x01	; 1
 45a:	f1 f7       	brne	.-4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45e:	00 00       	nop
	_delay_ms(1);
	LCD_vSend_cmd(CLR_SCREEN);//clear the screen
 460:	81 e0       	ldi	r24, 0x01	; 1
 462:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_cmd>
 466:	8f e1       	ldi	r24, 0x1F	; 31
 468:	9e e4       	ldi	r25, 0x4E	; 78
 46a:	01 97       	sbiw	r24, 0x01	; 1
 46c:	f1 f7       	brne	.-4      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 46e:	00 c0       	rjmp	.+0      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 470:	00 00       	nop
	_delay_ms(10);
	LCD_vSend_cmd(ENTRY_MODE); //entry mode
 472:	86 e0       	ldi	r24, 0x06	; 6
 474:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_cmd>
 478:	8f ec       	ldi	r24, 0xCF	; 207
 47a:	97 e0       	ldi	r25, 0x07	; 7
 47c:	01 97       	sbiw	r24, 0x01	; 1
 47e:	f1 f7       	brne	.-4      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 480:	00 c0       	rjmp	.+0      	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 482:	00 00       	nop
 484:	08 95       	ret

00000486 <LCD_vSend_char>:
}

void LCD_vSend_char(char data)
{
	#if defined eight_bits_mode
	DIO_write_port('A',data);
 486:	68 2f       	mov	r22, r24
 488:	81 e4       	ldi	r24, 0x41	; 65
 48a:	0e 94 76 01 	call	0x2ec	; 0x2ec <DIO_write_port>
	DIO_write('B',RS,1);
 48e:	41 e0       	ldi	r20, 0x01	; 1
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	82 e4       	ldi	r24, 0x42	; 66
 494:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_write>
	send_falling_edge();
 498:	0e 94 b0 01 	call	0x360	; 0x360 <send_falling_edge>
 49c:	8f ec       	ldi	r24, 0xCF	; 207
 49e:	97 e0       	ldi	r25, 0x07	; 7
 4a0:	01 97       	sbiw	r24, 0x01	; 1
 4a2:	f1 f7       	brne	.-4      	; 0x4a0 <LCD_vSend_char+0x1a>
 4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <LCD_vSend_char+0x20>
 4a6:	00 00       	nop
 4a8:	08 95       	ret

000004aa <LCD_vSend_string>:
	_delay_ms(1);
}


void LCD_vSend_string(char *data)
{
 4aa:	cf 93       	push	r28
 4ac:	df 93       	push	r29
 4ae:	ec 01       	movw	r28, r24
	while((*data)!='\0')
 4b0:	88 81       	ld	r24, Y
 4b2:	88 23       	and	r24, r24
 4b4:	31 f0       	breq	.+12     	; 0x4c2 <LCD_vSend_string+0x18>
 4b6:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_vSend_char(*data);
 4b8:	0e 94 43 02 	call	0x486	; 0x486 <LCD_vSend_char>
}


void LCD_vSend_string(char *data)
{
	while((*data)!='\0')
 4bc:	89 91       	ld	r24, Y+
 4be:	81 11       	cpse	r24, r1
 4c0:	fb cf       	rjmp	.-10     	; 0x4b8 <LCD_vSend_string+0xe>
	{
		LCD_vSend_char(*data);
		data++;
	}
}
 4c2:	df 91       	pop	r29
 4c4:	cf 91       	pop	r28
 4c6:	08 95       	ret

000004c8 <LCD_clearscreen>:
void LCD_clearscreen()
{
	LCD_vSend_cmd(CLR_SCREEN);
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_cmd>
 4ce:	8f e1       	ldi	r24, 0x1F	; 31
 4d0:	9e e4       	ldi	r25, 0x4E	; 78
 4d2:	01 97       	sbiw	r24, 0x01	; 1
 4d4:	f1 f7       	brne	.-4      	; 0x4d2 <LCD_clearscreen+0xa>
 4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <LCD_clearscreen+0x10>
 4d8:	00 00       	nop
 4da:	08 95       	ret

000004dc <LCD_movecursor>:
	_delay_ms(10);
}
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
 4dc:	9f ef       	ldi	r25, 0xFF	; 255
 4de:	98 0f       	add	r25, r24
 4e0:	92 30       	cpi	r25, 0x02	; 2
 4e2:	70 f4       	brcc	.+28     	; 0x500 <LCD_movecursor+0x24>
 4e4:	9f ef       	ldi	r25, 0xFF	; 255
 4e6:	96 0f       	add	r25, r22
 4e8:	90 31       	cpi	r25, 0x10	; 16
 4ea:	60 f4       	brcc	.+24     	; 0x504 <LCD_movecursor+0x28>
	{
		data=0x80;
	}
	else if(row==1)
 4ec:	81 30       	cpi	r24, 0x01	; 1
 4ee:	19 f4       	brne	.+6      	; 0x4f6 <LCD_movecursor+0x1a>
	{
		data=0x80+coloumn-1 ;
 4f0:	2f e7       	ldi	r18, 0x7F	; 127
 4f2:	26 0f       	add	r18, r22
 4f4:	08 c0       	rjmp	.+16     	; 0x506 <LCD_movecursor+0x2a>
	}
	else if (row==2)
 4f6:	82 30       	cpi	r24, 0x02	; 2
 4f8:	31 f4       	brne	.+12     	; 0x506 <LCD_movecursor+0x2a>
	{
		data=0xc0+coloumn-1;
 4fa:	2f eb       	ldi	r18, 0xBF	; 191
 4fc:	26 0f       	add	r18, r22
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <LCD_movecursor+0x2a>
void LCD_movecursor(char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
	{
		data=0x80;
 500:	20 e8       	ldi	r18, 0x80	; 128
 502:	01 c0       	rjmp	.+2      	; 0x506 <LCD_movecursor+0x2a>
 504:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+coloumn-1;
	}
	LCD_vSend_cmd(data);
 506:	82 2f       	mov	r24, r18
 508:	0e 94 c7 01 	call	0x38e	; 0x38e <LCD_vSend_cmd>
 50c:	8f ec       	ldi	r24, 0xCF	; 207
 50e:	97 e0       	ldi	r25, 0x07	; 7
 510:	01 97       	sbiw	r24, 0x01	; 1
 512:	f1 f7       	brne	.-4      	; 0x510 <LCD_movecursor+0x34>
 514:	00 c0       	rjmp	.+0      	; 0x516 <LCD_movecursor+0x3a>
 516:	00 00       	nop
 518:	08 95       	ret

0000051a <_exit>:
 51a:	f8 94       	cli

0000051c <__stop_program>:
 51c:	ff cf       	rjmp	.-2      	; 0x51c <__stop_program>
